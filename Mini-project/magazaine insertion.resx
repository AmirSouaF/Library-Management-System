<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MagazineImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>